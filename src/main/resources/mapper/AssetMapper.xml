<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Asset">

<!--    <select id="findAll" resultType="Asset">-->
<!--        SELECT * FROM asset-->
<!--    </select>-->

    <select id="findById" parameterType="Long" resultType="Asset">
        select * from asset where assetIdx= #{id}
    </select>

    <select id="findAssetTypeById" parameterType="Long" resultType="String">
        select assetType from asset where assetIdx= #{assetIdx}
    </select>

    <insert id="saveHardwareAsset" parameterType="Asset" useGeneratedKeys="true" keyProperty="assetIdx">
        INSERT INTO asset
        (assetCode, assetName, assetType, assetStatus, sn, location, dept,
         purchaseDate, assignedDate, returnDate, currentUser, previousUser,
         manufacturer)
        VALUES
            (#{assetCode}, #{assetName}, #{assetType}, #{assetStatus}, #{sn}, #{location}, #{dept},
             #{purchaseDate}, #{assignedDate}, #{returnDate}, #{currentUser}, #{previousUser},
             #{manufacturer})
    </insert>

    <insert id="saveSoftwareAsset" parameterType="Asset" useGeneratedKeys="true" keyProperty="assetIdx">
        INSERT INTO asset
        (assetCode, assetName, sn, purchaseDate, assetStatus, location, dept, manufacturer, currentUser, assignedDate, previousUser, returnDate, expiryDate)
        VALUES
            (#{assetCode}, #{assetName}, #{sn}, #{purchaseDate}, #{assetStatus}, #{location}, #{dept}, #{manufacturer}, #{currentUser}, #{assignedDate}, #{previousUser}, #{returnDate}, #{expiryDate})
    </insert>

    <update id="update" parameterType="Asset">
        UPDATE asset
        SET
            assetCode = #{assetCode},
            assetName = #{assetName},
            assetType = #{assetType},
            assetStatus = #{assetStatus},
            sn = #{sn},
            location = #{location},
            dept = #{dept},
            purchaseDate = #{purchaseDate},
            assignedDate = #{assignedDate},
            returnDate = #{returnDate},
            currentUser = #{currentUser},
            previousUser = #{previousUser},
            manufacturer = #{manufacturer}
        WHERE assetIdx = #{assetIdx}
    </update>

    <delete id="deleteById" parameterType="long">
        DELETE FROM asset WHERE assetIdx = #{assetIdx}
    </delete>

    <select id="findAssetCodeById" parameterType="Long" resultType="String">
        select assetCode from asset where assetIdx= #{assetIdx}
    </select>

    <select id="findAll" resultType="Asset">
        SELECT * FROM asset
        ORDER BY assetIdx ASC
            LIMIT #{pageSize} OFFSET #{offset}
    </select>

<!--    <select id="findAllWithPaging" parameterType="map" resultType="Hardware">-->
<!--        SELECT * FROM asset-->
<!--        ORDER BY assetIdx ASC-->
<!--            LIMIT #{pageSize} OFFSET #{offset}-->
<!--    </select>-->

<!--    <select id="countAll" resultType="Integer">-->
<!--        SELECT-->
<!--            COUNT(assetIdx)-->
<!--        FROM asset-->
<!--    </select>-->

    <select id="findAllWithPagingAndFilter" parameterType="map" resultType="Asset">
        SELECT
        assetIdx,
        assetCode,
        assetName,
        assetType,
        assetStatus,
        sn,
        location,
        dept,
        assignedDate,
        returnDate,
        currentUser,
        previousUser,
        manufacturer
        FROM asset
        <where>
            <if test="category != null and category != '' and keyword != null">
                <choose>
                    <when test="category == 'assetCode'">
                        AND assetCode LIKE #{keyword}
                    </when>
                    <when test="category == 'assetName'">
                        AND assetName LIKE #{keyword}
                    </when>
                    <when test="category == 'assetType'">
                        AND assetType LIKE #{keyword}
                    </when>
                    <!-- 여기에 다른 카테고리 조건을 추가할 수 있습니다. -->
                    <when test="category == 'assetStatus'">
                        AND assetStatus LIKE #{keyword}
                    </when>
                    <when test="category == 'sn'">
                        AND sn LIKE #{keyword}
                    </when>
                    <when test="category == 'location'">
                        AND location LIKE #{keyword}
                    </when>
                    <when test="category == 'dept'">
                        AND dept LIKE #{keyword}
                    </when>
                    <when test="category == 'assignedDate'">
                        AND assignedDate LIKE #{keyword}
                    </when>
                    <when test="category == 'returnDate'">
                        AND returnDate LIKE #{keyword}
                    </when>
                    <when test="category == 'currentUser'">
                        AND currentUser LIKE #{keyword}
                    </when>
                    <when test="category == 'previousUser'">
                        AND previousUser LIKE #{keyword}
                    </when>
                    <when test="category == 'manufacturer'">
                        AND manufacturer LIKE #{keyword}
                    </when>
                </choose>
            </if>
        </where>
        <choose>
            <when test="sort == 'assetCode'">
                ORDER BY assetCode ${order}
            </when>
            <when test="sort == 'assetName'">
                ORDER BY assetName ${order}
            </when>
            <when test="sort == 'assetType'">
                ORDER BY assetType ${order}
            </when>
            <when test="sort == 'assetStatus'">
                ORDER BY assetStatus ${order}
            </when>
            <when test="sort == 'sn'">
                ORDER BY sn ${order}
            </when>
            <when test="sort == 'location'">
                ORDER BY location ${order}
            </when>
            <when test="sort == 'dept'">
                ORDER BY dept ${order}
            </when>
            <when test="sort == 'assignedDate'">
                ORDER BY assignedDate ${order}
            </when>
            <when test="sort == 'returnDate'">
                ORDER BY returnDate ${order}
            </when>
            <when test="sort == 'currentUser'">
                ORDER BY currentUser ${order}
            </when>
            <when test="sort == 'previousUser'">
                ORDER BY previousUser ${order}
            </when>
            <when test="sort == 'manufacturer'">
                ORDER BY manufacturer ${order}
            </when>
            <!-- 이하 정렬 조건들 생략 -->
            <otherwise>
                ORDER BY assetIdx ASC
            </otherwise>
        </choose>
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <select id="countAllFiltered" parameterType="map" resultType="Integer">
        SELECT
        COUNT(assetIdx)
        FROM asset
        <where>
            <if test="category != null and category != '' and keyword != null">
                <choose>
                    <when test="category == 'assetCode'">
                        AND assetCode LIKE #{keyword}
                    </when>
                    <when test="category == 'assetName'">
                        AND assetName LIKE #{keyword}
                    </when>
                    <when test="category == 'assetType'">
                        AND assetType LIKE #{keyword}
                    </when>
                    <!-- 여기에 다른 카테고리 조건을 추가할 수 있습니다. -->
                    <when test="category == 'assetStatus'">
                        AND assetStatus LIKE #{keyword}
                    </when>
                    <when test="category == 'sn'">
                        AND sn LIKE #{keyword}
                    </when>
                    <when test="category == 'location'">
                        AND location LIKE #{keyword}
                    </when>
                    <when test="category == 'dept'">
                        AND dept LIKE #{keyword}
                    </when>
                    <when test="category == 'assignedDate'">
                        AND assignedDate LIKE #{keyword}
                    </when>
                    <when test="category == 'returnDate'">
                        AND returnDate LIKE #{keyword}
                    </when>
                    <when test="category == 'currentUser'">
                        AND currentUser LIKE #{keyword}
                    </when>
                    <when test="category == 'previousUser'">
                        AND previousUser LIKE #{keyword}
                    </when>
                    <when test="category == 'manufacturer'">
                        AND manufacturer LIKE #{keyword}
                    </when>

                </choose>
            </if>
        </where>
    </select>

</mapper>
